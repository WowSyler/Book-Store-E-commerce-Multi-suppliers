@model BookStore.Models.Suppliers

@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_LSupp.cshtml";
}

<section id="main-content">
    <section class="wrapper">        
        <div class="row mt">
            <h2>Update Supplier</h2>
            <div class="col-lg-12">

@using (Html.BeginForm("UpdateSupp", "Suppliers", FormMethod.Post, new { supp = Session["suppname"] ,@class = "form-horizontal style-form" }))
{
    @Html.AntiForgeryToken()
                <div class="form-panel">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.SupplierID)
                    <h4 class="mb"><i class="fa fa-angle-right"></i> Form Elements</h4>
                    
                     
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-sm-2 col-sm-2 control-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control round-form" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SurName, htmlAttributes: new { @class = "col-sm-2 col-sm-2 control-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control round-form" } })
                                @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-sm-2 col-sm-2 control-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control round-form" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-sm-2 col-sm-2 control-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control round-form", @type ="text"  } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-sm-2 col-sm-2 control-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control round-form" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "col-sm-2 col-sm-2 control-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control round-form" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "col-sm-2 col-sm-2 control-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control round-form" } })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "col-sm-2 col-sm-2 control-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control round-form" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-sm-2 col-sm-2 control-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control round-form", @type = "password" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                      

                       
                     
                  
                </div>


}
            </div>
        </div>
    </section>
</section>

            

<div>
    @Html.ActionLink("Back to Home", "Index", new { supp = Session["suppname"] })
</div>
